############# More detailed bits and pieces ##############

If archeos https://github.com/archeos/ArcheOS gets things right it could replace all of this, just run that in the VM

The Berkeley Computational Enviroment http://collaboratool.berkeley.edu/ is similar but a bit heavy

## First download a Linux distribution: 
# Debian internet-installer image file: http://www.debian.org/distrib/netinst
# or
# Lubuntu, if looking for something smaller and using less memory, use the desktop cd from http://lubuntu.net/

# then download and install Oracle VM VirtualBox: https://www.virtualbox.org/wiki/Downloads

## start VirtualBox
# Make new VM, follow prompts, set "Type: Linux" and "Version: Debian" or if using Lubuntu, "Version: Ubuntu" then ok
# at 'select start-up disk' choose the downloaded iso to make the VM from, then if using Debian, use the Debian graphic installer
# many fields can be left blank, try them and see, but DO be sure to select “Debian desktop environment”
# There are many useful guides for this (stop following when you get to the desktop, don't run any of the code in these how-tos)
# Here's a selection of how-tos (you might also search youtube)
# Mac: http://williamjturkel.net/2013/05/31/installing-debian-linux-in-a-vm/ 
# http://www.brianlinkletter.com/installing-debian-linux-in-a-virtualbox-virtual-machine/
# Windows: https://jtreminio.com/2012/07/setting-up-a-debian-vm-step-by-step/

## install guest additions (GA) to allow for copy and pasting between VM and host
# http://askubuntu.com/questions/22743/how-do-i-install-guest-additions-in-a-virtualbox-vm
# first open terminal and type (without #)
# sudo apt-get update
# sudo apt-get install make gcc
# then at the terminal, change to the GA directory and type:
# sudo ./VBoxLinuxAdditions.run 
# then 
# sudo reboot

# Once VM has finished installing and Linux is up and running on your screen, 
# open a terminal to continue, in Debian do:

Applications -> Accessories ->Tterminal

# Or in Lubuntu do:

Button in lower left of screen -> Accessories -> LXTerminal

# see shell script below for getting things installed, read through it before running to 
# know what to expect, then copy-paste the shell script below into the text editor (gedit, leafpad etc.) on your  VM, 
# save locally on your VM, then run the shell script from the terminal by 
# typing the next line in the terminal (without the #):
# bash install_things.sh

## Other things we want to do with a VM:

# to share the entire Linux VM with others
# http://superuser.com/questions/235376/how-to-share-a-virtualbox-image
file -> export appliance

# to swap files between host OS and guest OS: https://www.virtualbox.org/manual/ch04.html
# and don't forget to add self to share folder: https://www.virtualbox.org/ticket/7951

# Debian: getting in and out of su: 
# in:  su -
# out: su yourusername

# To do:

# add right-click or keyboard shortcut to 'open terminal'  cf. http://askubuntu.com/a/207448/119774 http://www.cyberciti.biz/faq/linux-gnome-open-terminal-shell-prompt-here/

# see http://cran.r-project.org/bin/linux/ubuntu/README
# sudo sh -c 'echo "deb http://cran.rstudio.com/bin/linux/debian wheezy-cran3/" >> /etc/apt/sources.list' # if Debian
sudo sh -c 'echo "deb http://cran.rstudio.com/bin/linux/ubuntu trusty/" >> /etc/apt/sources.list' # if Lubuntu
# sudo sh -c 'echo "deb http://cran.rstudio.com/ raring-backports main restricted universe" >> /etc/apt/sources.list' # if Lubuntu

# sudo easy_install rpy2 # if using python: now we can sudo ipython notebook & use R within: http://nbviewer.ipython.org/github/ipython/ipython/blob/3607712653c66d63e0d7f13f073bde8c0f209ba8/docs/examples/notebooks/rmagic_extension.ipynb#Rmagic-Functions-Extension
 


From https://github.com/ropensci/docker/blob/master/ropensci/Dockerfile

## Add CRAN binaries and update
RUN add-apt-repository -y ppa:marutter/c2d4u && apt-get update -qq && apt-get upgrade -qy 


## From the Build-Depends of the Debian R package: 968 MB!
RUN apt-get install -y --no-install-recommends gcc g++ gfortran libblas-dev liblapack-dev tcl8.5-dev tk8.5-dev bison groff-base libncurses5-dev libreadline-dev debhelper texinfo libbz2-dev liblzma-dev libpcre3-dev xdg-utils zlib1g-dev libpng-dev libjpeg-dev libx11-dev libxt-dev x11proto-core-dev libpango1.0-dev libcairo2-dev libtiff5-dev xvfb xauth xfonts-base texlive-base texlive-latex-base texlive-generic-recommended texlive-fonts-recommended texlive-fonts-extra texlive-extra-utils texlive-latex-recommended texlive-latex-extra default-jdk mpack bash-completion 

## rmarkdown-related dependencies: 146 MB
RUN apt-get install -y --no-install-recommends texlive-humanities lmodern texlive-fonts-recommended texlive-latex-extra imagemagick pandoc pandoc-citeproc 

## R binaries: 149 MB 
RUN apt-get install -y r-cran-dplyr r-cran-devtools r-cran-rcpp r-cran-xml r-cran-rjava r-cran-rmysql r-cran-rsqlite libxslt1-dev r-cran-rsqlite.extfuns r-cran-rmysql r-cran-data.table r-cran-testthat r-cran-knitr r-cran-ggplot2 r-cran-mgcv r-cran-mass r-cran-tidyr r-cran-shiny r-cran-monetdb.r libxslt1-dev libpq-dev 

## Not avaiable on marutter/c2d4u
# r-cran-rstudioapi r-cran-microbenchmark r-cran-rpostgresql r-cran-roxygen2

RUN echo 'options("repos"="http://cran.rstudio.com", encoding="UTF-8")' > /.Rprofile
RUN Rscript -e 'install.packages(c("RPostgreSQL", "roxygen2", "microbenchmark", "rstudioapi"))'
RUN Rscript -e 'source("http://bioconductor.org/biocLite.R"); biocLite("rhdf5", ask=FALSE); biocLite("BiocInstaller")'
RUN Rscript -e 'devtools::install_github(c("rstudio/rmarkdown", "rstudio/packrat", "hadley/bigrquery", "hadley/reshape"))'
RUN Rscript -e 'install.packages(c("SSOAP", "XMLSchema", "Sxslt"), repo="http://www.omegahat.org/R", type="source")'
RUN Rscript -e 'devtools::install_github("egonw/rrdf", subdir="rrdflibs", build_vignettes=FALSE); devtools::install_github("egonw/rrdf", subdir="rrdf", build_vignettes=FALSE)'
